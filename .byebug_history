c
@articles.to_json
@articles
articles
q!
n
next_article["id"]
next_article.id
c
n
next_article
n
created_date.to_i == article["created_date"].to_i
created_date.to_i == article["created_date
created_date.to_i
article["created_date"].to_i
n
article["created_date"].to_i
n
article["created_date"].to_i
n
article["created_date"].to_i
n
created_date.to_i
current_articles.map { |article| article["created_date"].to_i }
article["created_date"].to_i
c
q!
c
next_article
c
article["created_date"].to_i
created_date.to_i
c
current_articles.map { |article| article["created_date"].to_i }
created_date.to_i
article["created_date"].to_i
n
created_date.to_i
article["created_date"].to_i
n
created_date.to_i
article["created_date"].to_i
n
created_date.to_i
article["created_date"].to_i
n
created_date.to_i
article["created_date"].to_i
q!
next_article
q!
c
next_article
q!
c
current_articles[0]["created_date"].to_i
created_date.to_i
created_date.getutc
created_date.methods
created_date.to_utc
next_article = current_articles.bsearch { |article| article["created_date"].to_s == created_date.to_s  }
next_article
q!
c
created_date.to_s
current_articles[0]["created_date"].to_s
current_articles[0]["created_date"]
current_articles[0]["created_date
current_articles.each { |article| p (article[:title])  }
current_articles.each { |article| p (article)  }
current_articles.each { |article| p (article.title)  }
current_articles.each { |article| p (article["title"])  }
current_articles.each { |article| p (article["created_date"])  }
current_articles.each { |article| p (article[created_date"])  }
current_articles.each { |article| p (article[created_date])  }
current_articles.each { |article| p (article["created_date"])  }
current_articles.each { |article| p (article["created_at"])  }
current_articles.each { |article| p article["created_at"]  }
current_articles.each { |article| p article["created_date"]  }
current_articles.each { |article| p (article["created_date"]).to_s  }
current_articles.each { |article| p article["created_date"].to_s  }
current_articles.bsearch { |article| p article["created_date"].to_s  }
created_date.to_s
new Date(created_date)
new Date.(created_date)
Date.(created_date)
Date.parse(created_date)
Date.parse(created_date_
created_date.class
current_articles.bsearch { |article| p article["created_date"]  }
created_date
current_articles.bsearch { |article| p article["id"]  }
current_articles.bsearch { |article| article["created_date"] == created_date  }
next_article
q!
c
cc
c
current_articles.bsearch { |article| article["created_date"] == created_date  }
current_articles.bsearch { |article| article["created_date"] = created_date  }
current_articles
c
current_articles.each { |article| puts "#{article}\n" }
current_articles.each { |article| puts article }
current_articles.each { |article| puts article puts }
current_articles.each { |article| puts article \n }
current_articles.each { |article| puts article }
current_articls.each { |article| puts article }
current_articles.bsearch { |article| p article["id"] }
current_articles.bsearch { |article| p article.id }
current_articles
c
current_articles
current_articles.bsearch { |article| p article.id }
q!
c
rss.entries.length
c
next_article
c
article
c
urlc
c
url
article
c
next_article
c
image
summary
author
url
title
c
n
Article.find_by_created_date(created_date)
created_date
next_article
c
next_article
c
next_article
c
next_article
c
next_article
c
next_article
c
next_article
c
next_article
c
next_article
c
next_article
c
next_article
c
next_article
c
next_article
c
next_article
c
next_article
c
next_article
c
next_article
c
next_article
c
next_article
q!
c
current_articles
Article.all
Article.where(url: url)
Article.find_or_create_by(url: url)
c
next_article
c
hey = Article.find_or_create_by(url: url)
hey
title
next_article
c
hey.summary = summary
hey.image = image
hey.created_date = created_date
hey.website_id = params[:website_id]
hey.title = title
hey = Article.find_or_create_by(url: url)
Article.find_or_create_by(url: url)
next_article
c
params[:website_id]
article.created_date = created_date
created_date
c
image
summary
author
title
url
c
                 endc
                    return article if article["url"] == url
current_articles.each do |article|
                 end
                    return article if article["url"] == url
current_articles.each do |article|
@article
c
article["url"]
article.url
article
article[:url]
c
@article
c
@article
c
cash.first.class
cash.class
cash = current_articles.to_a.map(&:serializable_hash)
current_articles.to_a.map(&:serializable_hash)
current_articles.serializable_hash
current_articles.to_a
cajson.url
cajson = current_articles.as_json
current_articles.url
current_articles.as_json
current_articles.ids
current_articles.methods
current_articles
current_articles.select(:id)
current_articles.select(:article_id)
current_articles.select(article_id)
current_articles.select
current_articles.methods
current_articles.to_h
current_articles
q!
c
current_articles.where('url = ?', url).first
current_articles.where
current_articles
c
[].first
@article.first.id
@article.first
@article
