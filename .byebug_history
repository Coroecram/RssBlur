c
@user.errors.full_messages.class
@user.errors.full_messages
@user.errors
c
@user.errors.full_messages.join(\n)
@user.errors.full_messages.join("\n")
@user.errors.full_messages.join("\\n")
@user.errors.full_messages.join("\n")
@user.errors.full_messages.join("\n"
@user.errors.full_messages
@user.errors.full_messages.to_sentence
@user.errors
@user.valid?
@user.valid/
c
pag.images.best
pag = MetaInspector.new('http://www.npr.org/sections/thetwo-way/2016/01/31/465059192/for-more-than-a-million-food-stamp-recipients-the-clock-is-now-ticking?utm_medium=RSS&utm_campaign=news')
MetaInspector.new('http://www.npr.org/sections/thetwo-way/2016/01/31/465059192/for-more-than-a-million-food-stamp-recipients-the-clock-is-now-ticking?utm_medium=RSS&utm_campaign=news')
MetaInspector.new(http://www.npr.org/sections/thetwo-way/2016/01/31/465059192/for-more-than-a-million-food-stamp-recipients-the-clock-is-now-ticking?utm_medium=RSS&utm_campaign=news)
c
@article_store
c
exit
s
ss
s
c
meta_page.meta["author"]
meta_page.meta.author
meta_page.meta
meta_page.neta
meta_page.best_title
meta_page.images.best
url
meta_page = MetaInspector.new(url)
c
url
meta_page.images.best
meta_page = MetaInspector.new(url)
c
n
meta_page.url
meta_page.images.methods
meta_page.images.largest
meta_page.images.favicon
meta_page.images.best
meta_page.title
title
meta_page.best_title
meta_page.best_image
meta_page.best_iamge
meta_page = MetaInspector.new(url)
url
c
url
c
page.feed
page.url
url
c
page.title
Website.find_by_url(page.feed)
page.feed.methods
page.feed
page.url
page.source
page = MetaInspector.new(@url)
MetaInspector.new(@url)
c
MetaInspector.new(@url)
@url
c
feed.content_type == ("text/xml" || "application/rss+xml")
(feed.content_type == ("text/xml" || "application/rss+xml")) 
(feed.content_type == "text/xml" || "application/rss+xml") 
feed.content_type == "text/xml" || "application/rss+xml" 
feed.content_type
feed == page
c
page.content_type
MetaInspector.new(page.feed)
feed
@website
c
@website
c
n
page.feed
page.fee
page
c
page
c
page
c
page
c
@articles.length
c
articles.articles.length
articles.articles
articles.class
c
@articles.length
@articles.class
c
articles.articles
c
@articles.length
c
x
c
@articles.length
c
@articles.length
c
@articles.length
c
articles.articles.length
articles.length
c
@articles.length
c
@articles.length
c
@articles.length
@articles
@articls
articles.length
articles
c
@articles.length
c
articles.articles.length
c
@articles.length
@articles
params[:per]
c
params[:per]
@articles.length
@articles
params
c
Article.where('website_id = ?', website_id).length
Article.where('website_id = ?', website_id)
c
@articles.length
c
params[:page]
params[:per]
c
params[:per]
params[:page]
c
n
farticles.length
farticles = Article.by_website(params[:website_id]).page(params[:page]).per(params[:per])
Article.by_website(params[:website_id]).page(params[:page]).per(params[:per])
params[:page]
c
params
c
params
c
params
c
current_user.websites.find(params[:id].to_i)
c
current_user.websites.find(22)
current_user.websites.find(21)
current_user.websites.find(params[:id].to_i)
current_user.websites.find
current_user.websites
current_user
c
page.url
page
page.feed
feed
page.url
page.feed
c
page.host
page.hos
page.methods
page.source
page.best_title
page.title
c
root_page.root_url
root_page.host
root_page.methods
root_page.path
doc.rootroot_page
doc.root
doc.methods
doc
root_page.url
root_page.meta
root_page.best_title
root_page.methods
root_page.title
root_page
tooat_page.title
c
current_user.articles.length
c
current_user.articles.length
current_user.articles.length'
current_user.articles
@articles
c
params
c
params
per
c
params
Article.by_website(params[:website_id]).page(params[:page]).per(params[:per])
params
c
Article.by_website(params[:website_id]).page(params[:page]).per(params[:per])
exit
Article.by_website(params[:website_id]).page(params[:page]+1).per(params[:per]) == Article.by_website(params[:website_id]).page(params[:page]).per(params[:per])
Article.by_website(params[:website_id]).page((params[:page].to_i+1).to_s).per(params[:per])
Article.by_website(params[:website_id]).page(params[(:page].to_i+1).to_s).per(params[:per])
Article.by_website(params[:website_id]).page(params[:page]+1).per(params[:per])
Article.by_website(params[:website_id]).page(params[:page]+1).per(params[:per]) == Article.by_website(params[:website_id]).page(params[:page]).per(params[:per])
Article.by_website(params[:website_id]).page(params[:page]).per(params[:per])
                         .page(params[:page])
Article.by_website(params[:website_id])
Article.by_website(params[:website_id]).count
c
current_user.articles.length
current_user.articles.legth
@articles.length
c
@articles.length
c
@articles.length
@articles/length
@articles
c
params
c
Article.by_website(params[:website_id]).page(params[:page]).per(params[:per])
                                                         .per(params[:per])
Article.by_website(params[:website_id]).page(params[:page])
params
c
params
c
params[:page] == 1
params
