c
UserWebsite.find_by_user_id_and_website_id(current_user.id, params[:website_id]).delete
UserWebsite.find_by_user_id_and_website_id(current_user.id, params[:website_id])
c
uw = UserWebsite.find_by_user_id_and_website_id(1, 2).methods
uw = UserWebsite.find_by_user_id_and_website_id(1, 2)
uw = UserWebsite.find_by_user_id(2).methods
uw = UserWebsite.find_by_user_id(2).all
uw = UserWebsite.find_by_user_id(2).methods
uw = UserWebsite.find_by_user_id(2)
uw = UserWebsite.find_all_by_user_id(1)
uw = UserWebsite.find_by_user_id(1)
uw.methods
uw = UserWebsite.find_by_website_id(params[:id].to_i)
UserWebsite.find_by_website_id(params[:id].to_i).find_by_user_id(1)
UserWebsite.find_by_website_id(params[:id].to_i).where("user_id = 1")
UserWebsite.find_by_website_id(params[:id].to_i)
UserWebsite.find_by_website_id(params[:id].to_i).where("user_id = ?", current_user.id)
current_user
params[:id].to_i
params[:id]
params
c
params
data
c
params
c
@website = Website.find_by_url("hey")
@website = Website.find_by_url(params[:url])
url_validator.errors.full_messages
url_validator.valid?
 url_validator = Website.new(name: 'Test', url: params[:url])
c
url_validation
c
page.feed.methods
page.items
page.feed.items
page.feed
page = MetaInspector.new(params[:url])
page.feed
root_page.images.favicon
root_page = MetaInspector.new(root_url)
root_url = "#{root_uri.scheme}://#{root_uri.host}"
root_url = "#{feed_uri.scheme}://#{feed_uri.host}"
root_uri = URI(params[:url])
params[:url]
params[:ur;]
doc.favicon
doc = Pismo::Document.new(params[:url])
pismo
q!
page.root_url
page.url
page.methods
page.source
page.sourc
params[:url]
page.root_url
page.url
rss.channel.items.first
rss.channel.methods
rss.methods
rss = RSS::Parser.parse(open(params[:url]))
require 'rss'
rss = RSS::Parser.parse(open(params[:url]))
page.methods
page.items
page.itmes
page = MetaInspector.new(params[:url])
c
page.methods
page.feed
page.url
page.root_url
root_page.url
root_page
root_page = MetaInspector.new(page.root_url)
root_url.url
page.root_url
page = MetaInspector.new(params[:url])
feed
c
root_page.images.favicon
root_page.description
root_page.title
root_page = MetaInspector.new(page.root_url)
page = MetaInspector.new(params[:url])
c
root_page.images.favicon
root_page.methods
root_page.title
root_page.description
page.description
root_page.url
root_page = MetaInspector.new(page.root_url)
page = MetaInspector.new(params[:url])
root_page = MetaInspector.new(page.root_url)
c
root_page.description
root_page.title
root_page = MetaInspector.new(page.root_url)
page = MetaInspector.new(params[:url])
root_page = MetaInspector.new(page.root_url)
c
root_page.images.favicon
root_page = MetaInspector.new(page.root_url)
page.root_url.images.favicon
page.root_url
page.methods
page.root
wired.com
page.images.favicon
page.url
page = MetaInspector.new(params[:url])
page.url
c
page.description
page.url
c
http_url = nil
http_url
page.url
page.methods
page.source
page
url
c
page.host
page.methods
page.title
params[:url]
page.description
page.images.favicon
page.methods
page.best_image
poage.best_image
page.meta
page.description
page.fav_icon
page.favicon
page.title
page = MetaInspector.new(params[:url])
feed
page
c
"#{feed_uri.scheme}://#{feed_uri.host}#{feed_uri.path}"
feed_uri = URI(page.feed)
page.feed
feed_uri = URI(metafeed.feed)
metafeed
metafeed.feed
metafeed = MetaInspector.new(page.feed)
page.feed
page.feed'
c
metafeed.feed
metafeed = MetaInspector.new(page.feed)
page.feed
c
metafeed = MetaInspector.new(page.feed)
page.feed.feed
page.feed/feed
page.feed
c
page.feed
page.best_title
page.title
page.description
page.feed
page.description
page.scheme
page.meta_tags
page.methods
page
doc.path
doc.methods
doc.logo
doc.favicon
page.favicon
page.methods
page.meta
page.description
page.title
page = MetaInspector.new(params[:url])
page = MetaInspect.new(params[:url])
params[:url]
params([:url])
doc.meta
doc.methods
doc.description
doc.url
doc.methods
doc.root
doc.methods
doc
c
doc.xpath("//title").children.first.text
doc
doc = Nokogiri::XML(open("https://#{url}"))
c
url
c
doc.xpath("//title").children.first.text
doc.xpath("//title").text
doc.xpath("//title").children.first.text
doc.title
doc = Nokogiri::XML(open(http_url))
http_url
url
c
url
params[:url] =~ /hdttp?:\/\/[\S]+/
params[:url] !=~ /http?:\/\/[\S]+/
params[:url] =~ /http?:\/\/[\S]+/
params[:url]
url
c
feed_uri.path
feed_uri.scheme
feed_uri.methods
feed_uri.methids
feed_uri
params[:url] =~ /http?:\/\/[\S]+/c
c
params[:url] !=~ /http?:\/\/+/
params[:url] =~ /http?:\/\/+/
params[:url] =~ /http?:\/\/[\S]+/
params[:url] =~ /https?:\/\/[\S]+/
params[:url] =~ ^http://
params[:url] =~ /^http://///
params[:url] =~ /^http:///
doc = Nokogiri::XML(open(params[:url]))
doc = Nokogiri::XML(open("http://#{params[:url]}"))
doc = Nokogiri::XML(open("http://#{params[:url]"))
params[:url]
doc = Nokogiri::XML(open("http://feeds.feedburner.com/motherjones/BlogsAndArticles"))
feed_page.best_title
feed_page.title
feed_page = MetaInspector.new("http://feeds.feedburner.com/motherjones/BlogsAndArticles")
metafeed.source
metafeed.description
page
feed
metafeed.methods
metafeed.best_title
metafeed.title
metafeed = MetaInspector.new(params[:url])
doc = Nokogiri::XML(open("www.#{params[:url]}"))
doc = Nokogiri::XML(open("www."params[:url]))
doc = Nokogiri::XML(open("www.'params[:url]))
doc = Nokogiri::XML(open(params[:url]))
feed
c
"#{feed_uri.host}#{feed_uri.path}"
