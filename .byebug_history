c
current_user.websites
current_user.websites.includes(:folder_id)
current_user.websites.includes(:user_website)
current_user.websites.includes
current_user.includes(:websites)
current_user.websites
current_user.websites.joins(current_user)
uw = current_user.user_websites.joins(:websites)
uw.joins( :websites )
uw.website

uw.websites
uw = current_user.user_websites
current_user.websites.joins('JOIN current_user.user_websites.folder_id ON website.id')
current_user.user_websites.includes(:websites)
cuw.last.folder_id
cuw.last
cuw = current_user.websites.joins(:user_websites)
current_user.websites.joins(:user_websites)
current_user.websites.joinss(:user_websites)
current_user.websites.includes(:user_websites)
current_user.websites.joins(:user_websites)
current_user.websites.joins(:user_websites ON :user_websites)
current_user.websites.joins(:user_websites.folder_id ON :user_websites.website_id)
current_user.websites.joins(user_websites.folder_id ON user_websites.website_id)
current_user.websites.joins(user_websites.folder_id ON user_websites.website_id')
current_user.websites.joins('INNER JOIN user_websites.folder_id ON user_websites.website_id')
cuw.joins('INNER JOIN current_users ON website_id')
cuw = current_user.websites
current_user.websites.joins('INNER JOIN user_websites.folder_id ON user_websites.website_id')
current_user.websites.joins(:user_websites)
current_user.websites.joins(:user_websites, :folder_id)
current_user.websites.joins('user_websites')
current_user.websites.joins('user_websites.folder_id')
current_user.user_websites.joins(:website)
current_user.user_websites.joins(:websites)
current_user.websites.joins('user_websites.folder_id')
current_user.websites.joins('JOIN user_websites.folder_id')
current_user.websites.joins('JOIN user_websites.folder_id ON user_websites.website_id')
current_user.websites.includes(:user_websites.folder_id)
current_user.websites.includes(:user_websites)
current_user.user_websites.first.folder_id
current_user.user_websites.first.website
current_user.user_websites.first
current_user.websites
current_user.websites.join('SELECT folder_id FROM user_websites')
current_user.websites
current_user.user_websites.folder_id
current_user.user_websites
c
current_articles.where('id = 268').count
current_articles.where('id = 268')
current_articles.where('id = 268
current_articles
c
user_article
c
user_article
c
user_article.methods
c
Article.all.count
c
cc
c
cc
c
Article.all.last
Article.all.count
c
Article.all.count
c
n
current_article_created_keys[created_date.to_i]
UserArticle.where('user_id = ?', current_user.id)
c
uas = UserArticle.where('article_id = 255')
uas = UserArticle.where('user_id = ?', current_user.id)
   19:                         article_id = ?',
UserArticle.where('user_id = ? AND
user_article
c
@unread_count
c
@unread_count
c
@unread_count
c
count
c
@unread.count
@unread
c
unread
UserArticle.where('user_id = ? AND website_id = ? AND read = false', current_user.id, params[:id].to_i)
@unread
c
                              read = false', current_user.id, params[:id].to_i)
                              website_id = ? AND
UserArticle.where('user_id = ? AND
@unread
c
count
c
count
c
count
c
q!
exit
user_articles.first.website
user_articles.where("website.id = ?", params[:id].to_i)
user_articles = UserArticle.where("user_id = ?", current_user.id)
UserArticle.where("user_id = ? AND website = ?", current_user.id, params[:id].to_i)
UserArticle.where("user_id = ? AND website = ?", current_user.id, params[:id])
UserArticle.where("user_id = ? AND website = ?", (current_user.id, params[:id]))
UserArticle.where("user_id = ? AND website = ?", (current_user.id, params[:id']))
UserArticle.where("user_id = ? AND website = ?", [current_user.id, params[:id']])
UserArticle.where("user_id = ?", current_user.id)
current_user.id
params[:id]
c
doc = Nokogiri::XML(open(url))
json.partial! 'website', website: @website
c
params
c
meta.meta["og:image"]
meta.meta
meta.image
meta = MetaInspector.new(url)
url
noko_page.css('img')
noko_page.css('img')['title']
noko_page.css('img').['title']
noko_page.css('img').attr('title')
noko_page.css('img')
c
page.url
page.feed
page = MetaInspector.new("motherjones.com")
MetaInspector.new("motherjones.com")
c
MetaInspector.new("http://addg")
MetaInspector.new("addg")
MetaInspector.methods
MetaInspector.new(url)
MetaInspector.new
MetaInspector
require 'metainspector'
require 'meta-inspector'
require 'metainspector'
require 'MetaInspector'
"http://asfafa" =~ URI::regexp
"http://asfafa" =~ URI::ABS_URI
"asfafa" =~ URI::ABS_URI
"www.asfafa" =~ URI::ABS_URI
"http://asfafa" =~ URI::ABS_URI
"http://www.#{url}" =~ URI::ABS_URI
"http://" =~ URI::regexp
"http://#{url}" =~ URI::regexp
"http://www.#{url}" =~ URI::regexp
"www.#{url}".valid_url
"www.#{url}"
"www.#{url}" =~ URI::ABS_URI
"www.#{url}" =~ URI::regexp
URI.parser
URI.parser("dsgsff")
URI.parse("dsgsff").parser
URI.parse("dsgsff").relative?
URI.parse(url).relative?
URI.parse(url).methods
URI.parse(url).valid?
URI.parse(url).valid/
URI.parse(url)
URI.pase(url)
<%= f.url_field url %>
<%= f.url_field :url %>
f
f.url_field
f
url =~ URI::regexp
url =~ URI::ABS_URI
url
c
current_article_keys
current_article_keys[1448558028]
current_article_keys
current_article_keys["1448558028"]
current_article_keys[1448558028]
current_articles.first["created_at"].to_i
current_articles.first
current_articles
page = params[:page].to_i
c
current_articles_ids
c
current_articles.first["id"]
current_articles
current)articles
current_articles_ids
c
current_article_keys
c
Article.find(55)
Artcle.find(55)
user_articles
q!
Article.all
user_articles[1].website.id
user_articles.select{ |ua| ua.website.id == 7 }
user_articles.select{ |ua| ua.website.id == 9 }
user_articles.select{ |ua| ua.website.id == 8 }
user_articles.select{ |ua| ua.website.id == 6 }
user_articles.select{ |ua| ua.website.id == 5 }
user_articles.select{ |ua| ua.website.id == 14 }
user_articles.select{ |ua| ua.website.id == params[:website_id].to_i }
params[:website_id]
user_articles.select{ |ua| ua.website.id == params[:website_id] }
user_articles.class
user_articles.each { |user_article| user_article.website.id == params[:website_id] }
user_articles.each { |user_article| user_article.website.id = params[:website_id] }
user_articles.select { |user_article| user_article.website.id = params[:website_id] }
user_articles.first.website
user_articles
user_articles.where
user_articles.each
user_articles.select(website.id = 1)
user_articles.select(website.id = 1
user_articles
user_Articles
c
q!
user_articles.first.website.id
user_articles.first.website
user_articles.first
q!
user_article_keys
user_articles_keys
user_articles
c
/\A#{URI::ABS_URI}\z/
/\A#{URI::ABS_URI}\z/)
!!(url =~/\A#{URI::ABS_URI}\z/)
!!(url =~/\AURI::ABS_URI\z/)
!!(url =~/\A URI::ABS_URI\z/)
!!(url =~/\A URI::ABS_URI\z/
!!(url =~ URI::ABS_URI)
url =~ URI::ABS_URI
URI::ABS_URI
!!URI.parse("dfddsddssvvfsf")
URI.parse("dfddsddssvvfsf")
URI.parse("dfdf")
URI.parse("")
!!URI.parse("http://")
